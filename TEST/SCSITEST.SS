; /// >  - KOSS 2002 < ///

	OPT	p=68030/68882
	comment	HEAD=7	; FastLoad

; --- EQUATE ASSEMBLY (EA) ---

STST_EA_200HZ:	EQU	$000004BA	; RW : l

STST_EA_SCSI_DR:	EQU	$FFFF8604	; RW : w
STST_EA_SCSI_RS:	EQU	$FFFF8606	;  W : w

; --- EQUATE DATA (ED) ---

STST_ED_DEVICE_FALC:	EQU	1<<0	; SCSI 0
STST_ED_DEVICE_TEST:	EQU	1<<4	; SCSI 4

; --- EQUATE INDEX (EI) ---

STST_EI_REG_WO_ODR:	EQU	0|$88	;  W
STST_EI_REG_RO_CSD:	EQU	0|$88	; R
STST_EI_REG_RW_ICR:	EQU	1|$88	; RW
STST_EI_REG_RW_MR2:	EQU	2|$88	; RW
STST_EI_REG_RW_TCR:	EQU	3|$88	; RW
STST_EI_REG_WO_SER:	EQU	4|$88	;  W
STST_EI_REG_RO_CSB:	EQU	4|$88	; R
STST_EI_REG_RO_BSR:	EQU	5|$88	; R
STST_EI_REG_WO_SDS:	EQU	5|$88	;  W
STST_EI_REG_WO_SDT:	EQU	6|$88	;  W
STST_EI_REG_RO_IDR:	EQU	6|$88	; R
STST_EI_REG_WO_SDI:	EQU	7|$88	;  W
STST_EI_REG_RO_RPI:	EQU	7|$88	; R

STST_EI_BIT_RW_ICR_xRST:	EQU	7	; ICR
STST_EI_BIT_RW_ICR_TEST:	EQU	6	; ICR
STST_EI_BIT_RW_ICR_LADIFF:	EQU	5	; ICR
STST_EI_BIT_RW_ICR_xACK:	EQU	4	; ICR
STST_EI_BIT_RW_ICR_xBSY:	EQU	3	; ICR
STST_EI_BIT_RW_ICR_xSEL:	EQU	2	; ICR
STST_EI_BIT_RW_ICR_xATN:	EQU	1	; ICR
STST_EI_BIT_RW_ICR_DBUS:	EQU	0	; ICR
STST_EI_BIT_RW_MR2_BLK:	EQU	7	; MR2
STST_EI_BIT_RW_MR2_TARG:	EQU	6	; MR2
STST_EI_BIT_RW_MR2_PCHK:	EQU	5	; MR2
STST_EI_BIT_RW_MR2_PINT:	EQU	4	; MR2
STST_EI_BIT_RW_MR2_EOP:	EQU	3	; MR2
STST_EI_BIT_RW_MR2_BSY:	EQU	2	; MR2
STST_EI_BIT_RW_MR2_DMA:	EQU	1	; MR2
STST_EI_BIT_RW_MR2_ARB:	EQU	0	; MR2
STST_EI_BIT_RW_TCR_xREQ:	EQU	3	; TCR
STST_EI_BIT_RW_TCR_xMSG:	EQU	2	; TCR
STST_EI_BIT_RW_TCR_xCD:	EQU	1	; TCR
STST_EI_BIT_RW_TCR_xIO:	EQU	0	; TCR
STST_EI_BIT_RO_CSB_xRST:	EQU	7	; CSB
STST_EI_BIT_RO_CSB_xBSY:	EQU	6	; CSB
STST_EI_BIT_RO_CSB_xREQ:	EQU	5	; CSB
STST_EI_BIT_RO_CSB_xMSG:	EQU	4	; CSB
STST_EI_BIT_RO_CSB_xCD:	EQU	3	; CSB
STST_EI_BIT_RO_CSB_xIO:	EQU	2	; CSB
STST_EI_BIT_RO_CSB_xSEL:	EQU	1	; CSB
STST_EI_BIT_RO_CSB_xDBP:	EQU	0	; CSB
STST_EI_BIT_RO_BSR_EDMA:	EQU	7	; BSR
STST_EI_BIT_RO_BSR_DRQ:	EQU	6	; BSR
STST_EI_BIT_RO_BSR_SPER:	EQU	5	; BSR
STST_EI_BIT_RO_BSR_INT:	EQU	4	; BSR
STST_EI_BIT_RO_BSR_PHSM:	EQU	3	; BSR
STST_EI_BIT_RO_BSR_BSY:	EQU	2	; BSR
STST_EI_BIT_RO_BSR_xATN:	EQU	1	; BSR
STST_EI_BIT_RO_BSR_xACK:	EQU	0	; BSR

STST_EI_MSK_RW_ICR_xRST:	EQU	1<<STST_EI_BIT_RW_ICR_xRST
STST_EI_MSK_RW_ICR_TEST:	EQU	1<<STST_EI_BIT_RW_ICR_TEST
STST_EI_MSK_RW_ICR_LADIFF:	EQU	1<<STST_EI_BIT_RW_ICR_LADIFF
STST_EI_MSK_RW_ICR_xACK:	EQU	1<<STST_EI_BIT_RW_ICR_xACK
STST_EI_MSK_RW_ICR_xBSY:	EQU	1<<STST_EI_BIT_RW_ICR_xBSY
STST_EI_MSK_RW_ICR_xSEL:	EQU	1<<STST_EI_BIT_RW_ICR_xSEL
STST_EI_MSK_RW_ICR_xATN:	EQU	1<<STST_EI_BIT_RW_ICR_xATN
STST_EI_MSK_RW_ICR_DBUS:	EQU	1<<STST_EI_BIT_RW_ICR_DBUS
STST_EI_MSK_RW_MR2_BLK:	EQU	1<<STST_EI_BIT_RW_MR2_BLK
STST_EI_MSK_RW_MR2_TARG:	EQU	1<<STST_EI_BIT_RW_MR2_TARG
STST_EI_MSK_RW_MR2_PCHK:	EQU	1<<STST_EI_BIT_RW_MR2_PCHK
STST_EI_MSK_RW_MR2_PINT:	EQU	1<<STST_EI_BIT_RW_MR2_PINT
STST_EI_MSK_RW_MR2_EOP:	EQU	1<<STST_EI_BIT_RW_MR2_EOP
STST_EI_MSK_RW_MR2_BSY:	EQU	1<<STST_EI_BIT_RW_MR2_BSY
STST_EI_MSK_RW_MR2_DMA:	EQU	1<<STST_EI_BIT_RW_MR2_DMA
STST_EI_MSK_RW_MR2_ARB:	EQU	1<<STST_EI_BIT_RW_MR2_ARB
STST_EI_MSK_RW_TCR_xREQ:	EQU	1<<STST_EI_BIT_RW_TCR_xREQ
STST_EI_MSK_RW_TCR_xMSG:	EQU	1<<STST_EI_BIT_RW_TCR_xMSG
STST_EI_MSK_RW_TCR_xCD:	EQU	1<<STST_EI_BIT_RW_TCR_xCD
STST_EI_MSK_RW_TCR_xIO:	EQU	1<<STST_EI_BIT_RW_TCR_xIO
STST_EI_MSK_RO_CSB_xRST:	EQU	1<<STST_EI_BIT_RO_CSB_xRST
STST_EI_MSK_RO_CSB_xBSY:	EQU	1<<STST_EI_BIT_RO_CSB_xBSY
STST_EI_MSK_RO_CSB_xREQ:	EQU	1<<STST_EI_BIT_RO_CSB_xREQ
STST_EI_MSK_RO_CSB_xMSG:	EQU	1<<STST_EI_BIT_RO_CSB_xMSG
STST_EI_MSK_RO_CSB_xCD:	EQU	1<<STST_EI_BIT_RO_CSB_xCD
STST_EI_MSK_RO_CSB_xIO:	EQU	1<<STST_EI_BIT_RO_CSB_xIO
STST_EI_MSK_RO_CSB_xSEL:	EQU	1<<STST_EI_BIT_RO_CSB_xSEL
STST_EI_MSK_RO_CSB_xDBP:	EQU	1<<STST_EI_BIT_RO_CSB_xDBP
STST_EI_MSK_RO_BSR_EDMA:	EQU	1<<STST_EI_BIT_RO_BSR_EDMA
STST_EI_MSK_RO_BSR_DRQ:	EQU	1<<STST_EI_BIT_RO_BSR_DRQ
STST_EI_MSK_RO_BSR_SPER:	EQU	1<<STST_EI_BIT_RO_BSR_SPER
STST_EI_MSK_RO_BSR_INT:	EQU	1<<STST_EI_BIT_RO_BSR_INT
STST_EI_MSK_RO_BSR_PHSM:	EQU	1<<STST_EI_BIT_RO_BSR_PHSM
STST_EI_MSK_RO_BSR_BSY:	EQU	1<<STST_EI_BIT_RO_BSR_BSY
STST_EI_MSK_RO_BSR_xATN:	EQU	1<<STST_EI_BIT_RO_BSR_xATN
STST_EI_MSK_RO_BSR_xACK:	EQU	1<<STST_EI_BIT_RO_BSR_xACK

; --- EQUATE SYSTEM (ES) ---

; /////////////////////////////////////////////////////////////////////////////	
	SECTION	TEXT
; /////////////////////////////////////////////////////////////////////////////	
		
; --- TEXT USER INIT (TUI) ---
	
	clr.l	-(SP)
	move.w	#$20,-(SP)	; - SUPER -
	TRAP	#1	; *** GEMDOS ***
	addq.l	#6,SP
	move.l	D0,STST_BDB_SYS_OLD_USP

; --- TEXT USER MAIN (TUM) ---

	BSR	STST_TSM_SCSI_TEST

; --- TEXT USER EXIT (TUE) ---

	move.l	STST_BDB_SYS_OLD_USP,-(SP)
	move.w	#$20,-(SP)	; - SUPER -
	TRAP	#1	; *** GEMDOS ***
	addq.l	#6,SP

PROG_TUE_PTERM0:	clr.w	-(SP)	; - P_TERM0 -
	TRAP	#1	; *** GEMDOS ***

; --- TEXT USER SUB (TUS) ---

; -----------------------------------------------------------------------------

; --- TEXT SUPER MAIN (TSM) ---
	
STST_TSM_SCSI_TEST:	; *** START OF ARBITRATION ***
	
	; ODR = device ID
	move.w	#STST_EI_REG_WO_ODR,STST_EA_SCSI_RS.w
	move.w	#STST_ED_DEVICE_FALC,STST_EA_SCSI_DR.w
	
	BRA	STST_TSM_START_ARBIT
	
STST_TSM_RESTART_ARBIT:	; MR2:ARB = 0
	move.w	#STST_EI_REG_RW_MR2,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	move.w	#STST_EI_MSK_RW_MR2_ARB,D1
	not.w	D1
	and.w	D1,D0
	move.w	D0,STST_EA_SCSI_DR.w
	
STST_TSM_START_ARBIT:	; MR2:ARB = 1
	move.w	#STST_EI_REG_RW_MR2,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_MR2_ARB,D0
	move.w	D0,STST_EA_SCSI_DR.w
	
	; ? ICR:TEST = 1
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
STST_TSM_WAIT_RW_ICR_AIP:	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_BIT_RW_ICR_TEST,D0
	BEQ	STST_TSM_WAIT_RW_ICR_AIP

	; Wait Bus Free (800ns) + Arbitration Delay (2200 ns)
	lea	STST_EA_200HZ.w,A0
	move.l	(A0),D0
STST_TSM_WAIT_ARB_TIME:	move.l	(A0),D1
	cmp.l	D0,D1
	BLE	STST_TSM_WAIT_ARB_TIME
	
	; ? ICR:LA = 1
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_BIT_RW_ICR_LADIFF,D0
	BNE	STST_TSM_RESTART_ARBIT
	
	; CSD = ?
	move.w	#STST_EI_REG_RO_CSD,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	cmpi.w	#STST_ED_DEVICE_TEST,D0
	BGE	STST_TSM_RESTART_ARBIT
	
	; ICR:xSEL = 1
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_ICR_xSEL,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; Wait Bus Clear (800ns) + Bus Settle Delay (400 ns)
	lea	STST_EA_200HZ.w,A0
	move.l	(A0),D0
STST_TSM_WAIT_CLR_TIME:	move.l	(A0),D1
	cmp.l	D0,D1
	BLE	STST_TSM_WAIT_CLR_TIME
	
	; *** SELECTION ***
	
	; ODR = device ID
	move.w	#STST_EI_REG_WO_ODR,STST_EA_SCSI_RS.w
	move.w	#STST_ED_DEVICE_TEST|STST_ED_DEVICE_FALC,STST_EA_SCSI_DR.w

	; ICR:[SEL|ATN|DBUS] = 1
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_ICR_xSEL|STST_EI_MSK_RW_ICR_xATN|STST_EI_MSK_RW_ICR_DBUS,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; Ensure SER = 0
	; MR2:ARB = 0
	move.w	#STST_EI_REG_RW_MR2,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	move.w	#STST_EI_MSK_RW_MR2_ARB,D1
	not.w	D1
	and.w	D1,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; Wait Selection Timeout Delay (250 ms)
	; ? CSB:xBSY = 1 before timeout
	lea	STST_EA_200HZ.w,A0
	move.l	(A0),D0
	add.l	#250/5,D0	; 250 ms
	move.w	#STST_EI_REG_RO_CSB,STST_EA_SCSI_RS.w
STST_TSM_WAIT_SEL_TIME:	move.w	STST_EA_SCSI_DR.w,D2
	btst.l	#STST_EI_MSK_RO_CSB_xBSY,D2
	BNE	STST_TSM_END_SELECTION
	move.l	(A0),D1
	cmp.l	D0,D1
	BLE	STST_TSM_WAIT_SEL_TIME

	BRA	STST_TSM_EXIT
	
STST_TSM_END_SELECTION:	; ICR:[SEL|DBUS] = 0
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	move.w	#STST_EI_MSK_RW_ICR_xSEL|STST_EI_MSK_RW_ICR_DBUS,D1
	not.w	D1
	and.w	D1,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; *** COMMAND TRANSFERT ***
	
	; MR2:BSY = 1
	move.w	#STST_EI_REG_RW_MR2,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_MR2_BSY,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; TCR:CD = 1
	move.w	#STST_EI_REG_RW_TCR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_TCR_xCD,D0
	move.w	D0,STST_EA_SCSI_DR.w
	
	lea	STST_DDA_IDENTIFY_CMD,A1
	move.w	(A1)+,D7
	subq.w	#1,D7
	
	; ? CSB:REQ = 1
STST_TSM_WAIT_COM_INI1:	move.w	#STST_EI_REG_RO_CSB,STST_EA_SCSI_RS.w
STST_TSM_WAIT_COM_INI2:	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_CSB_xREQ,D0
	BEQ	STST_TSM_WAIT_COM_INI2
	
	; ? BSR:PHSM = 1
	move.w	#STST_EI_REG_RO_BSR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_BSR_PHSM,D0
	BEQ	STST_TSM_EXIT
	
	; ODR = data
	move.w	#STST_EI_REG_WO_ODR,STST_EA_SCSI_RS.w
	move.w	(A1)+,STST_EA_SCSI_DR.w
	
	; ICR:ACK = 1
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_ICR_xACK,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; ? CSB:REQ = 0
	move.w	#STST_EI_REG_RO_CSB,STST_EA_SCSI_RS.w
STST_TSM_WAIT_COM_INI3:	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_CSB_xREQ,D0
	BNE	STST_TSM_WAIT_COM_INI3

	; ICR:ACK = 0
	move.w	#STST_EI_REG_RW_ICR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	move.w	#STST_EI_MSK_RW_ICR_xACK,D1
	not.w	D1
	and.w	D1,D0
	move.w	D0,STST_EA_SCSI_DR.w

	DBF	D7,STST_TSM_WAIT_COM_INI1
	
	; *** MESSAGE TRANSFERT ***
	
	lea	STST_BDB_DEV_ID_BUFFER,A1
	move.w	#96-1,D7
	
	; ? BSR:ATN = 0
STST_TSM_WAIT_ATN:	move.w	#STST_EI_REG_RO_BSR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_BSR_xATN,D0
	BNE	STST_TSM_WAIT_ATN
	
	; TCR:CD = 1
	move.w	#STST_EI_REG_RW_TCR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_TCR_xCD,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; Wait Bus Settle Delay (400 ns)
	lea	STST_EA_200HZ.w,A0
	move.l	(A0),D0
STST_TSM_WAIT_SET_TIME:	move.l	(A0),D1
	cmp.l	D0,D1
	BLE	STST_TSM_WAIT_SET_TIME

	; TCR:REQ = 1
	move.w	#STST_EI_REG_RW_TCR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	ori.w	#STST_EI_MSK_RW_TCR_xREQ,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; ? BSR:ACK = 1
STST_TSM_WAIT_ACK1:	move.w	#STST_EI_REG_RO_BSR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_BSR_xACK,D0
	BEQ	STST_TSM_WAIT_ACK1

	; CSD = data
	move.w	#STST_EI_REG_RO_CSD,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,(A1)+
	
	; TCR:REQ = 0
	move.w	#STST_EI_REG_RW_TCR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	move.w	#STST_EI_MSK_RW_TCR_xREQ,D1
	not.w	D1
	and.w	D1,D0
	move.w	D0,STST_EA_SCSI_DR.w

	; ? BSR:ACK = 0
STST_TSM_WAIT_ACK2:	move.w	#STST_EI_REG_RO_BSR,STST_EA_SCSI_RS.w
	move.w	STST_EA_SCSI_DR.w,D0
	btst.l	#STST_EI_MSK_RO_BSR_xACK,D0
	BNE	STST_TSM_WAIT_ACK2
	
	DBF	D7,STST_TSM_WAIT_ATN
	
STST_TSM_EXIT:	RTS

; --- TEXT SUPER SUB (TSS) ---

; /////////////////////////////////////////////////////////////////////////////	
	SECTION	DATA
; /////////////////////////////////////////////////////////////////////////////	
	
; --- DATA ADDRESS TABLE (DAT) ---
	
; --- DATA DEFINED ARRAY (DDA) ---
	
STST_DDA_IDENTIFY_CMD:	dc.w	1	; Message lenght
	dc.b	%10000011
	
STST_DDA_INQUIRY_CMD:	dc.w	6	; Message lenght
	dc.b	$12	; INQUIRY
	dc.b	3<<4	; LUN
	dc.b	0	; PAGE CODE
	dc.b	0
	dc.b	0	; ALLOC LENGHT
	dc.b	0	; CONTROL

; /////////////////////////////////////////////////////////////////////////////	
	SECTION	BSS
; /////////////////////////////////////////////////////////////////////////////	

; --- BSS DATA BUFFER (BDB) ---

STST_BDB_SYS_OLD_USP:	ds.l	1

STST_BDB_DEV_ID_BUFFER:	ds.b	96

; --- BSS FLAG BUFFER (BFB) ---
